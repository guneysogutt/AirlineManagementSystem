{"ast":null,"code":"var _jsxFileName = \"/Users/guneysogut/guney/projects/AMS/ams/src/routes/dashboard/ListUser.js\",\n  _s = $RefreshSig$();\nimport { axios } from '../../index';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Box } from '@mui/material';\nimport { useLoaderData } from 'react-router-dom';\nimport { EmptyPage } from '../../components/Page';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  flex: 1\n}, {\n  field: 'name',\n  headerName: 'Name',\n  flex: 1\n}, {\n  field: 'surname',\n  headerName: 'Surname',\n  flex: 1\n}, {\n  field: 'gender',\n  headerName: 'Gender',\n  flex: 1\n}, {\n  field: 'birth_date',\n  headerName: 'Birth',\n  flex: 1,\n  valueFormatter: params => dayjs(params.value).format('DD/MM/YYYY')\n}, {\n  field: 'email',\n  headerName: 'Email',\n  flex: 1\n}, {\n  field: 'phone',\n  headerName: 'Phone',\n  flex: 1\n}, {\n  field: 'money',\n  headerName: 'Balance',\n  flex: 1,\n  valueFormatter: params => params.value + ' ₺'\n}];\nexport function ListUser() {\n  _s();\n  // Note: MUI DataGrid requires all rows to have a unique `id` property.\n  // Since our database handles that case, we don't need to map any rows.\n  const rows = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EmptyPage, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      flexGrow: 1,\n      height: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        disableRowSelectionOnClick: true,\n        slots: {\n          toolbar: GridToolbar\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ListUser, \"nuXnS2ZIQYMCsgkGsAeXF3FE9VE=\", false, function () {\n  return [useLoaderData];\n});\n_c = ListUser;\nexport async function listUserLoader() {\n  const response = await axios.get('/profile/users');\n  return response.data;\n}\nvar _c;\n$RefreshReg$(_c, \"ListUser\");","map":{"version":3,"names":["axios","DataGrid","GridToolbar","Box","useLoaderData","EmptyPage","dayjs","jsxDEV","_jsxDEV","columns","field","headerName","flex","valueFormatter","params","value","format","ListUser","_s","rows","children","flexGrow","height","disableRowSelectionOnClick","slots","toolbar","fileName","_jsxFileName","lineNumber","columnNumber","_c","listUserLoader","response","get","data","$RefreshReg$"],"sources":["/Users/guneysogut/guney/projects/AMS/ams/src/routes/dashboard/ListUser.js"],"sourcesContent":["import { axios } from '../../index';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { Box } from '@mui/material';\nimport { useLoaderData } from 'react-router-dom';\nimport { EmptyPage } from '../../components/Page';\nimport dayjs from 'dayjs';\n\nconst columns = [\n  {\n    field: 'id',\n    headerName: 'ID',\n    flex: 1,\n  },\n  {\n    field: 'name',\n    headerName: 'Name',\n    flex: 1,\n  },\n  {\n    field: 'surname',\n    headerName: 'Surname',\n    flex: 1,\n  },\n  {\n    field: 'gender',\n    headerName: 'Gender',\n    flex: 1,\n  },\n  {\n    field: 'birth_date',\n    headerName: 'Birth',\n    flex: 1,\n    valueFormatter: params => dayjs(params.value).format('DD/MM/YYYY'),\n  },\n  {\n    field: 'email',\n    headerName: 'Email',\n    flex: 1,\n  },\n  {\n    field: 'phone',\n    headerName: 'Phone',\n    flex: 1,\n  },\n  {\n    field: 'money',\n    headerName: 'Balance',\n    flex: 1,\n    valueFormatter: params => params.value + ' ₺'\n  },\n];\n\nexport function ListUser() {\n  // Note: MUI DataGrid requires all rows to have a unique `id` property.\n  // Since our database handles that case, we don't need to map any rows.\n  const rows = useLoaderData()\n\n  return (\n    <EmptyPage>\n      <Box flexGrow={1} height='100vh'>\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          disableRowSelectionOnClick\n          slots={{\n            toolbar: GridToolbar,\n          }}\n        />\n      </Box>\n    </EmptyPage>\n  );\n}\n\nexport async function listUserLoader() {\n  const response = await axios.get('/profile/users');\n  return response.data;\n}"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,aAAa;AACnC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAG,CACd;EACEC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,IAAI;EAChBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,KAAK,EAAE,MAAM;EACbC,UAAU,EAAE,MAAM;EAClBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,KAAK,EAAE,SAAS;EAChBC,UAAU,EAAE,SAAS;EACrBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,KAAK,EAAE,QAAQ;EACfC,UAAU,EAAE,QAAQ;EACpBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,KAAK,EAAE,YAAY;EACnBC,UAAU,EAAE,OAAO;EACnBC,IAAI,EAAE,CAAC;EACPC,cAAc,EAAEC,MAAM,IAAIR,KAAK,CAACQ,MAAM,CAACC,KAAK,CAAC,CAACC,MAAM,CAAC,YAAY;AACnE,CAAC,EACD;EACEN,KAAK,EAAE,OAAO;EACdC,UAAU,EAAE,OAAO;EACnBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,KAAK,EAAE,OAAO;EACdC,UAAU,EAAE,OAAO;EACnBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,KAAK,EAAE,OAAO;EACdC,UAAU,EAAE,SAAS;EACrBC,IAAI,EAAE,CAAC;EACPC,cAAc,EAAEC,MAAM,IAAIA,MAAM,CAACC,KAAK,GAAG;AAC3C,CAAC,CACF;AAED,OAAO,SAASE,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACzB;EACA;EACA,MAAMC,IAAI,GAAGf,aAAa,CAAC,CAAC;EAE5B,oBACEI,OAAA,CAACH,SAAS;IAAAe,QAAA,eACRZ,OAAA,CAACL,GAAG;MAACkB,QAAQ,EAAE,CAAE;MAACC,MAAM,EAAC,OAAO;MAAAF,QAAA,eAC9BZ,OAAA,CAACP,QAAQ;QACPkB,IAAI,EAAEA,IAAK;QACXV,OAAO,EAAEA,OAAQ;QACjBc,0BAA0B;QAC1BC,KAAK,EAAE;UACLC,OAAO,EAAEvB;QACX;MAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAACX,EAAA,CAnBeD,QAAQ;EAAA,QAGTb,aAAa;AAAA;AAAA0B,EAAA,GAHZb,QAAQ;AAqBxB,OAAO,eAAec,cAAcA,CAAA,EAAG;EACrC,MAAMC,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAG,CAAC,gBAAgB,CAAC;EAClD,OAAOD,QAAQ,CAACE,IAAI;AACtB;AAAC,IAAAJ,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}