{"ast":null,"code":"// Underscore-contrib (underscore.util.strings.js 0.3.0)\n// (c) 2013 Michael Fogus, DocumentCloud and Investigative Reporters & Editors\n// Underscore-contrib may be freely distributed under the MIT license.\n\n(function (root) {\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var _ = root._ || require('underscore');\n\n  // Helpers\n  // -------\n\n  // No reason to create regex more than once\n  var plusRegex = /\\+/g;\n  var spaceRegex = /\\%20/g;\n  var bracketRegex = /(?:([^\\[]+))|(?:\\[(.*?)\\])/g;\n  var urlDecode = function (s) {\n    return decodeURIComponent(s.replace(plusRegex, '%20'));\n  };\n  var urlEncode = function (s) {\n    return encodeURIComponent(s).replace(spaceRegex, '+');\n  };\n  var buildParams = function (prefix, val, top) {\n    if (_.isUndefined(top)) top = true;\n    if (_.isArray(val)) {\n      return _.map(val, function (value, key) {\n        return buildParams(top ? key : prefix + '[]', value, false);\n      }).join('&');\n    } else if (_.isObject(val)) {\n      return _.map(val, function (value, key) {\n        return buildParams(top ? key : prefix + '[' + key + ']', value, false);\n      }).join('&');\n    } else {\n      return urlEncode(prefix) + '=' + urlEncode(val);\n    }\n  };\n\n  // Mixing in the string utils\n  // ----------------------------\n\n  _.mixin({\n    // Explodes a string into an array of chars\n    explode: function (s) {\n      return s.split('');\n    },\n    // Parses a query string into a hash\n    fromQuery: function (str) {\n      var parameters = str.split('&'),\n        obj = {},\n        parameter,\n        key,\n        match,\n        lastKey,\n        subKey,\n        depth;\n\n      // Iterate over key/value pairs\n      _.each(parameters, function (parameter) {\n        parameter = parameter.split('=');\n        key = urlDecode(parameter[0]);\n        lastKey = key;\n        depth = obj;\n\n        // Reset so we don't have issues when matching the same string\n        bracketRegex.lastIndex = 0;\n\n        // Attempt to extract nested values\n        while ((match = bracketRegex.exec(key)) !== null) {\n          if (!_.isUndefined(match[1])) {\n            // If we're at the top nested level, no new object needed\n            subKey = match[1];\n          } else {\n            // If we're at a lower nested level, we need to step down, and make\n            // sure that there is an object to place the value into\n            subKey = match[2];\n            depth[lastKey] = depth[lastKey] || (subKey ? {} : []);\n            depth = depth[lastKey];\n          }\n\n          // Save the correct key as a hash or an array\n          lastKey = subKey || _.size(depth);\n        }\n\n        // Assign value to nested object\n        depth[lastKey] = urlDecode(parameter[1]);\n      });\n      return obj;\n    },\n    // Implodes and array of chars into a string\n    implode: function (a) {\n      return a.join('');\n    },\n    // Converts a string to camel case\n    camelCase: function (string) {\n      return string.replace(/-([a-z])/g, function (g) {\n        return g[1].toUpperCase();\n      });\n    },\n    // Converts camel case to dashed (opposite of _.camelCase)\n    toDash: function (string) {\n      string = string.replace(/([A-Z])/g, function ($1) {\n        return \"-\" + $1.toLowerCase();\n      });\n      // remove first dash\n      return string.charAt(0) == '-' ? string.substr(1) : string;\n    },\n    // Creates a query string from a hash\n    toQuery: function (obj) {\n      return buildParams('', obj);\n    },\n    // Reports whether a string contains a search string.\n    strContains: function (str, search) {\n      if (typeof str != 'string') throw new TypeError();\n      return str.indexOf(search) != -1;\n    }\n  });\n})(this);","map":{"version":3,"names":["root","_","require","plusRegex","spaceRegex","bracketRegex","urlDecode","s","decodeURIComponent","replace","urlEncode","encodeURIComponent","buildParams","prefix","val","top","isUndefined","isArray","map","value","key","join","isObject","mixin","explode","split","fromQuery","str","parameters","obj","parameter","match","lastKey","subKey","depth","each","lastIndex","exec","size","implode","a","camelCase","string","g","toUpperCase","toDash","$1","toLowerCase","charAt","substr","toQuery","strContains","search","TypeError","indexOf"],"sources":["/Users/guneysogut/guney/projects/AMS/ams/node_modules/underscore-contrib/underscore.util.strings.js"],"sourcesContent":["// Underscore-contrib (underscore.util.strings.js 0.3.0)\n// (c) 2013 Michael Fogus, DocumentCloud and Investigative Reporters & Editors\n// Underscore-contrib may be freely distributed under the MIT license.\n\n(function(root) {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var _ = root._ || require('underscore');\n\n  // Helpers\n  // -------\n\n  // No reason to create regex more than once\n  var plusRegex = /\\+/g;\n  var spaceRegex = /\\%20/g;\n  var bracketRegex = /(?:([^\\[]+))|(?:\\[(.*?)\\])/g;\n\n  var urlDecode = function(s) {\n    return decodeURIComponent(s.replace(plusRegex, '%20'));\n  };\n  var urlEncode = function(s) {\n    return encodeURIComponent(s).replace(spaceRegex, '+');\n  };\n\n  var buildParams = function(prefix, val, top) {\n    if (_.isUndefined(top)) top = true;\n    if (_.isArray(val)) {\n      return _.map(val, function(value, key) {\n        return buildParams(top ? key : prefix + '[]', value, false);\n      }).join('&');\n    } else if (_.isObject(val)) {\n      return _.map(val, function(value, key) {\n        return buildParams(top ? key : prefix + '[' + key + ']', value, false);\n      }).join('&');\n    } else {\n      return urlEncode(prefix) + '=' + urlEncode(val);\n    }\n  };\n\n  // Mixing in the string utils\n  // ----------------------------\n\n  _.mixin({\n    // Explodes a string into an array of chars\n    explode: function(s) {\n      return s.split('');\n    },\n\n    // Parses a query string into a hash\n    fromQuery: function(str) {\n      var parameters = str.split('&'),\n          obj = {},\n          parameter,\n          key,\n          match,\n          lastKey,\n          subKey,\n          depth;\n\n      // Iterate over key/value pairs\n      _.each(parameters, function(parameter) {\n        parameter = parameter.split('=');\n        key = urlDecode(parameter[0]);\n        lastKey = key;\n        depth = obj;\n\n        // Reset so we don't have issues when matching the same string\n        bracketRegex.lastIndex = 0;\n\n        // Attempt to extract nested values\n        while ((match = bracketRegex.exec(key)) !== null) {\n          if (!_.isUndefined(match[1])) {\n\n            // If we're at the top nested level, no new object needed\n            subKey = match[1];\n\n          } else {\n\n            // If we're at a lower nested level, we need to step down, and make\n            // sure that there is an object to place the value into\n            subKey = match[2];\n            depth[lastKey] = depth[lastKey] || (subKey ? {} : []);\n            depth = depth[lastKey];\n          }\n\n          // Save the correct key as a hash or an array\n          lastKey = subKey || _.size(depth);\n        }\n\n        // Assign value to nested object\n        depth[lastKey] = urlDecode(parameter[1]);\n      });\n\n      return obj;\n    },\n\n    // Implodes and array of chars into a string\n    implode: function(a) {\n      return a.join('');\n    },\n\n    // Converts a string to camel case\n    camelCase : function( string ){\n      return  string.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\n    },\n\n    // Converts camel case to dashed (opposite of _.camelCase)\n    toDash : function( string ){\n      string = string.replace(/([A-Z])/g, function($1){return \"-\"+$1.toLowerCase();});\n      // remove first dash\n      return  ( string.charAt( 0 ) == '-' ) ? string.substr(1) : string;\n    },\n\n    // Creates a query string from a hash\n    toQuery: function(obj) {\n      return buildParams('', obj);\n    },\n\n    // Reports whether a string contains a search string.\n    strContains: function(str, search) {\n      if (typeof str != 'string') throw new TypeError;\n      return (str.indexOf(search) != -1);\n    }\n\n  });\n})(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}