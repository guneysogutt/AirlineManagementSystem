{"ast":null,"code":"// Underscore-contrib (underscore.object.builders.js 0.3.0)\n// (c) 2013 Michael Fogus, DocumentCloud and Investigative Reporters & Editors\n// Underscore-contrib may be freely distributed under the MIT license.\n\n(function (root) {\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var _ = root._ || require('underscore');\n\n  // Helpers\n  // -------\n\n  // Create quick reference variables for speed access to core prototypes.\n  var slice = Array.prototype.slice,\n    concat = Array.prototype.concat;\n  var existy = function (x) {\n    return x != null;\n  };\n  var truthy = function (x) {\n    return x !== false && existy(x);\n  };\n  var isAssociative = function (x) {\n    return _.isArray(x) || _.isObject(x);\n  };\n  var curry2 = function (fun) {\n    return function (last) {\n      return function (first) {\n        return fun(first, last);\n      };\n    };\n  };\n\n  // Mixing in the object builders\n  // ----------------------------\n\n  _.mixin({\n    // Merges two or more objects starting with the left-most and\n    // applying the keys right-word\n    // {any:any}* -> {any:any}\n    merge: function /* objs */\n    () {\n      var dest = _.some(arguments) ? {} : null;\n      if (truthy(dest)) {\n        _.extend.apply(null, concat.call([dest], _.toArray(arguments)));\n      }\n      return dest;\n    },\n    // Takes an object and another object of strings to strings where the second\n    // object describes the key renaming to occur in the first object.\n    renameKeys: function (obj, kobj) {\n      return _.reduce(kobj, function (o, nu, old) {\n        if (existy(obj[old])) {\n          o[nu] = obj[old];\n          return o;\n        } else return o;\n      }, _.omit.apply(null, concat.call([obj], _.keys(kobj))));\n    },\n    // Snapshots an object deeply. Based on the version by\n    // [Keith Devens](http://keithdevens.com/weblog/archive/2007/Jun/07/javascript.clone)\n    // until we can find a more efficient and robust way to do it.\n    snapshot: function (obj) {\n      if (obj == null || typeof obj != 'object') {\n        return obj;\n      }\n      var temp = new obj.constructor();\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          temp[key] = _.snapshot(obj[key]);\n        }\n      }\n      return temp;\n    },\n    // Updates the value at any depth in a nested object based on the\n    // path described by the keys given.  The function provided is supplied\n    // the current value and is expected to return a value for use as the\n    // new value.  If no keys are provided, then the object itself is presented\n    // to the given function.\n    updatePath: function (obj, fun, ks, defaultValue) {\n      if (!isAssociative(obj)) throw new TypeError(\"Attempted to update a non-associative object.\");\n      if (!existy(ks)) return fun(obj);\n      var deepness = _.isArray(ks);\n      var keys = deepness ? ks : [ks];\n      var ret = deepness ? _.snapshot(obj) : _.clone(obj);\n      var lastKey = _.last(keys);\n      var target = ret;\n      _.each(_.initial(keys), function (key) {\n        if (defaultValue && !_.has(target, key)) {\n          target[key] = _.clone(defaultValue);\n        }\n        target = target[key];\n      });\n      target[lastKey] = fun(target[lastKey]);\n      return ret;\n    },\n    // Sets the value at any depth in a nested object based on the\n    // path described by the keys given.\n    setPath: function (obj, value, ks, defaultValue) {\n      if (!existy(ks)) throw new TypeError(\"Attempted to set a property at a null path.\");\n      return _.updatePath(obj, function () {\n        return value;\n      }, ks, defaultValue);\n    },\n    // Returns an object where each element of an array is keyed to\n    // the number of times that it occurred in said array.\n    frequencies: curry2(_.countBy)(_.identity)\n  });\n})(this);","map":{"version":3,"names":["root","_","require","slice","Array","prototype","concat","existy","x","truthy","isAssociative","isArray","isObject","curry2","fun","last","first","mixin","merge","dest","some","arguments","extend","apply","call","toArray","renameKeys","obj","kobj","reduce","o","nu","old","omit","keys","snapshot","temp","constructor","key","hasOwnProperty","updatePath","ks","defaultValue","TypeError","deepness","ret","clone","lastKey","target","each","initial","has","setPath","value","frequencies","countBy","identity"],"sources":["/Users/guneysogut/guney/projects/AMS/ams/node_modules/underscore-contrib/underscore.object.builders.js"],"sourcesContent":["// Underscore-contrib (underscore.object.builders.js 0.3.0)\n// (c) 2013 Michael Fogus, DocumentCloud and Investigative Reporters & Editors\n// Underscore-contrib may be freely distributed under the MIT license.\n\n(function(root) {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var _ = root._ || require('underscore');\n\n  // Helpers\n  // -------\n\n  // Create quick reference variables for speed access to core prototypes.\n  var slice   = Array.prototype.slice,\n      concat  = Array.prototype.concat;\n\n  var existy = function(x) { return x != null; };\n  var truthy = function(x) { return (x !== false) && existy(x); };\n  var isAssociative = function(x) { return _.isArray(x) || _.isObject(x); };\n  var curry2 = function(fun) {\n    return function(last) {\n      return function(first) {\n        return fun(first, last);\n      };\n    };\n  };\n\n  // Mixing in the object builders\n  // ----------------------------\n\n  _.mixin({\n    // Merges two or more objects starting with the left-most and\n    // applying the keys right-word\n    // {any:any}* -> {any:any}\n    merge: function(/* objs */){\n      var dest = _.some(arguments) ? {} : null;\n\n      if (truthy(dest)) {\n        _.extend.apply(null, concat.call([dest], _.toArray(arguments)));\n      }\n\n      return dest;\n    },\n\n    // Takes an object and another object of strings to strings where the second\n    // object describes the key renaming to occur in the first object.\n    renameKeys: function(obj, kobj) {\n      return _.reduce(kobj, function(o, nu, old) {\n        if (existy(obj[old])) {\n          o[nu] = obj[old];\n          return o;\n        }\n        else\n          return o;\n      },\n      _.omit.apply(null, concat.call([obj], _.keys(kobj))));\n    },\n\n    // Snapshots an object deeply. Based on the version by\n    // [Keith Devens](http://keithdevens.com/weblog/archive/2007/Jun/07/javascript.clone)\n    // until we can find a more efficient and robust way to do it.\n    snapshot: function(obj) {\n      if(obj == null || typeof(obj) != 'object') {\n        return obj;\n      }\n\n      var temp = new obj.constructor();\n\n      for(var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          temp[key] = _.snapshot(obj[key]);\n        }\n      }\n\n      return temp;\n    },\n\n    // Updates the value at any depth in a nested object based on the\n    // path described by the keys given.  The function provided is supplied\n    // the current value and is expected to return a value for use as the\n    // new value.  If no keys are provided, then the object itself is presented\n    // to the given function.\n    updatePath: function(obj, fun, ks, defaultValue) {\n      if (!isAssociative(obj)) throw new TypeError(\"Attempted to update a non-associative object.\");\n      if (!existy(ks)) return fun(obj);\n\n      var deepness = _.isArray(ks);\n      var keys     = deepness ? ks : [ks];\n      var ret      = deepness ? _.snapshot(obj) : _.clone(obj);\n      var lastKey  = _.last(keys);\n      var target   = ret;\n\n      _.each(_.initial(keys), function(key) {\n        if (defaultValue && !_.has(target, key)) {\n          target[key] = _.clone(defaultValue);\n        }\n        target = target[key];\n      });\n\n      target[lastKey] = fun(target[lastKey]);\n      return ret;\n    },\n\n    // Sets the value at any depth in a nested object based on the\n    // path described by the keys given.\n    setPath: function(obj, value, ks, defaultValue) {\n      if (!existy(ks)) throw new TypeError(\"Attempted to set a property at a null path.\");\n\n      return _.updatePath(obj, function() { return value; }, ks, defaultValue);\n    },\n\n    // Returns an object where each element of an array is keyed to\n    // the number of times that it occurred in said array.\n    frequencies: curry2(_.countBy)(_.identity)\n  });\n\n})(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}